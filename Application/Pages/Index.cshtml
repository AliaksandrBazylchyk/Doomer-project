@page
@using AspNetCore.ReCaptcha
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@inject IOptions<ReCaptchaSettings> ReCaptchaSettings
@model WebApplication13.Pages.IndexModel
@{
}

<script>
    function submitForm() {
        document.forms[0].submit();

    }
</script>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="css/styles.css">
    <title>Register</title>
</head>
<body>
    <div class="container">
        <h1>Registration</h1>
        <div>
            <input type="hidden" id="userId" />
            <form method="post">
                <div asp-validation-summary="All"></div>

                <div class="form-group">
                    <label asp-for="Login" class="control-label"></label>
                    <br>
                    <input asp-for="Login" class="form-control" id="userName" />
                </div>

                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <br>
                    <input asp-for="Password" class="form-control" type="password" id="userPassword" />
                </div>

                <div class="form-group">
                    <recaptcha class-name="btn btn-primary" callback="submitForm" text="Save" />
                </div>
            </form>
            <input class="button" id="baselogin" value="Base Login" type="button" onclick="Log()" />
            <input class="button" id="safelogin" value="Safe Login" type="button" onclick="SafeLogin()" />
            <button id="unsaveBtn">UnsafeSave</button>
            <button id="resetBtn">Delete</button>
        </div>
    </div>

    <table>
        <tbody>
        </tbody>
    </table>

    <script>
        async function isSession() {
            const response = await fetch("https://localhost:7249/api/Main/isSession", {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                if (await response.json() == true) {
                    location.href = 'WelcomePage.html';
                }
            }
        }
        isSession();
        async function createUserUnsafe(userName, userPassword) {

            const response = await fetch("https://localhost:7249/api/Main/unregistration", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: userName,
                    password: userPassword,
                })
            });
            if (response.ok === true) {
                const user = await response.json();

            }
            else {
                const error = await response.json();
                console.log(error.message);
            }
            reset();
        }
        function reset() {
            document.getElementById("userId").value =
                document.getElementById("userName").value =
                document.getElementById("userPassword").value = "";
        }
        document.getElementById("resetBtn").addEventListener("click", () => reset());
        document.getElementById("unsaveBtn").addEventListener("click", async () => {

            const id = document.getElementById("userId").value;
            const name = document.getElementById("userName").value;
            const password = document.getElementById("userPassword").value;
            await createUserUnsafe(name, password);
            reset();
        });
        function Log()
        {
            location.href = 'Next.html';
        }

        function SafeLogin() {
            location.href = 'SafeLogin';
        }
        reset()

    </script>
</body>
</html>